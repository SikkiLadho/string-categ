Microsoft (R) Macro Assembler Version 12.00.21005.1	    11/27/19 02:15:19
MY First Progra					     Page 1 - 1



				;||		there should be categorties folder and input folder, all files should be included there								||;
				;||		comma should not be printed at the last word, a flag should be created to know if this is a last word, 
				;||SOLUTION--		 it could be done using GoToXY and delete/replace previously printed comma								||;															||
				;||		write prototypes of functions that are not even taking any argumnets to make clear what funciton arer being used 	||;
				;||            check if input is in right format, i.e ends with .
				;||DONE---     tells if a file doesn't exist																				||;
				;||Done--		take care of a bug explained in bug.txt file																||;




				TITLE MY First Program
				INCLUDE Irvine32.inc
			      C ; Include file for Irvine32.lib             (Irvine32.inc)
			      C 
			      C ;OPTION CASEMAP:NONE		; optional: make identifiers case-sensitive
			      C 
			      C INCLUDE SmallWin.inc		; MS-Windows prototypes, structures, and constants
			      C .NOLIST
			      C .LIST
			      C 
			      C INCLUDE VirtualKeys.inc
			      C ; VirtualKeys.inc
			      C .NOLIST
			      C .LIST
			      C 
			      C 
			      C .NOLIST
			      C .LIST
			      C 

				wordFind PROTO, sourceText: ptr byte, tragetText: ptr byte, sourceSize: dword, targetSize: dword
				printCategName PROTO, categName:PTR BYTE, categNameSize:DWORD
				printFoundWord PROTO, foundWord:PTR BYTE
				clearString PROTO, textString:PTR BYTE, StringLength:DWORD
				extractWord PROTO
				writeFileNotExist PROTO, fileName:PTR BYTE


 00000000			.data


 00000000 00002710		categStringSize DWORD 10000
 00000004  00002710 [		categString BYTE 10000 dup(0)
	    00
	   ]
 00002714  00002710 [		foundWords BYTE 10000 dup(0)
	    00
	   ]
 00004E24 00002710		foundWordsSize DWORD 10000 
 00004E28 00000000		foundWordOffset DWORD 0


 00004E2C 63 61 74 65 67	FileNames	  byte  "categories\Pronouns.txt",0,0,0,0,0,0,0,0,0
	   6F 72 69 65 73
	   5C 50 72 6F 6E
	   6F 75 6E 73 2E
	   74 78 74 00 00
	   00 00 00 00 00
	   00 00
 00004E4C  63 61 74 65 67				  byte   "categories\Adjectives.txt",0,0,0,0,0,0,0
	   6F 72 69 65 73
	   5C 41 64 6A 65
	   63 74 69 76 65
	   73 2E 74 78 74
	   00 00 00 00 00
	   00 00
 00004E6C  63 61 74 65 67				  byte   "categories\Conjunction.txt",0,0,0,0,0,0
	   6F 72 69 65 73
	   5C 43 6F 6E 6A
	   75 6E 63 74 69
	   6F 6E 2E 74 78
	   74 00 00 00 00
	   00 00
 00004E8C  63 61 74 65 67				  byte    "categories\Helping verbs.txt",0,0,0,0
	   6F 72 69 65 73
	   5C 48 65 6C 70
	   69 6E 67 20 76
	   65 72 62 73 2E
	   74 78 74 00 00
	   00 00
 00004EAC  63 61 74 65 67				  byte    "categories\Nouns(names).txt",0,0,0,0,0
	   6F 72 69 65 73
	   5C 4E 6F 75 6E
	   73 28 6E 61 6D
	   65 73 29 2E 74
	   78 74 00 00 00
	   00 00
 00004ECC  63 61 74 65 67				  byte    "categories\Nouns(academic).txt",0,0
	   6F 72 69 65 73
	   5C 4E 6F 75 6E
	   73 28 61 63 61
	   64 65 6D 69 63
	   29 2E 74 78 74
	   00 00
 00004EEC  63 61 74 65 67				  byte   "categories\Nouns(countries).txt",0
	   6F 72 69 65 73
	   5C 4E 6F 75 6E
	   73 28 63 6F 75
	   6E 74 72 69 65
	   73 29 2E 74 78
	   74 00
 00004F0C  63 61 74 65 67				  byte    "categories\Articles.txt",0,0,0,0,0,0,0,0,0
	   6F 72 69 65 73
	   5C 41 72 74 69
	   63 6C 65 73 2E
	   74 78 74 00 00
	   00 00 00 00 00
	   00 00
 00004F2C  63 61 74 65 67				  byte    "categories\Adverbs.txt",0,0,0,0,0,0,0,0,0,0
	   6F 72 69 65 73
	   5C 41 64 76 65
	   72 62 73 2E 74
	   78 74 00 00 00
	   00 00 00 00 00
	   00 00
 00004F4C  63 61 74 65 67				  byte    "categories\Interjections.txt",0,0,0,0
	   6F 72 69 65 73
	   5C 49 6E 74 65
	   72 6A 65 63 74
	   69 6F 6E 73 2E
	   74 78 74 00 00
	   00 00
 00004F6C  63 61 74 65 67				  byte    "categories\Prepositions.txt",0,0,0,0,0
	   6F 72 69 65 73
	   5C 50 72 65 70
	   6F 73 69 74 69
	   6F 6E 73 2E 74
	   78 74 00 00 00
	   00 00
									
 00004F8C 0000000B		NoOfCategs DWORD 11
 00004F90 00000028		CategNameLength DWORD 40
 00004F94 00000000		TempFileNames DWORD  ?


 00004F98 00000000		Categfilehandler DWORD 0

 00004F9C 69 6E 70 75 74	inputFile BYTE "input\input.txt",0
	   5C 69 6E 70 75
	   74 2E 74 78 74
	   00
 00004FAC  00002710 [		inputString BYTE 10000 dup(0)
	    00
	   ]
 000076BC 00000000		inputFileHandler DWORD 0
 000076C0 00004FAC R		currentInputIndex DWORD offset inputString  ;//this might create a problem
 000076C4  00000028 [		extractedWord BYTE 40 dup(0)
	    00
	   ]
 000076EC 00000000		extractedWordSize DWORD 0
 000076F0 20			sepChar BYTE ' '           ; //seprating character
 000076F1 00000000		fwDisp DWORD 0
 000076F5 00000000		wordTheCount DWORD 0
				;//loop counters
 000076F9 00004E20		mainLoopCounter DWORD 20000


				;//flags
 000076FD 00000000		inputFileEnded DWORD 0
 00007701 00000000		fileCategWritten DWORD 0
 00007705 00000000		noWordFound DWORD 0


				;//Strings to be used
 00007709 3A 00			semiColon BYTE ":",0
 0000770B 2C 20 00		comma BYTE ", ", 0
 0000770E 2E			dot BYTE "."
 0000770F 20 20 20 20 20	bigSpace BYTE "       ",0
	   20 20 00
 00007717 2A 2A 2A 2A 2A	stars1 BYTE      "*******************************************************************************",0
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 00
 00007767 09 09 20 20 20	projectName BYTE "		                String Categrizer			       		  ",0
	   20 20 20 20 20
	   20 20 20 20 20
	   20 20 20 53 74
	   72 69 6E 67 20
	   43 61 74 65 67
	   72 69 7A 65 72
	   09 09 09 20 20
	   20 20 20 20 20
	   09 09 20 20 00
 00007799 2A 2A 2A 2A 2A	stars2 BYTE      "*******************************************************************************",0
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 2A
	   2A 2A 2A 2A 00
 000077E9 20 20 00		smallSpace BYTE "  ",0
						

				;//prompts
 000077EC 46 69 6C 65 20	promptFile1 BYTE "File '",0
	   27 00
 000077F3 27 20 64 6F 65	promptFile2 BYTE "' does not exist or cannot be opened.",0
	   73 20 6E 6F 74
	   20 65 78 69 73
	   74 20 6F 72 20
	   63 61 6E 6E 6F
	   74 20 62 65 20
	   6F 70 65 6E 65
	   64 2E 00
 00007819 54 68 65 20 69	promptNoDot1 BYTE "The is no '.' terminator in the input.",0
	   73 20 6E 6F 20
	   27 2E 27 20 74
	   65 72 6D 69 6E
	   61 74 6F 72 20
	   69 6E 20 74 68
	   65 20 69 6E 70
	   75 74 2E 00
 00007840 57 72 6F 6E 67	promptWrong BYTE "Wrong choice",0
	   20 63 68 6F 69
	   63 65 00
 0000784D 27 2E 27 20 64	promptNoDot2 BYTE "'.' determines the end of input. Exiting the program.",0
	   65 74 65 72 6D
	   69 6E 65 73 20
	   74 68 65 20 65
	   6E 64 20 6F 66
	   20 69 6E 70 75
	   74 2E 20 45 78
	   69 74 69 6E 67
	   20 74 68 65 20
	   70 72 6F 67 72
	   61 6D 2E 00
 00007883 20 20 57 6F 72	promptSep1 BYTE "  Words in your input and categories are seprated by:",0
	   64 73 20 69 6E
	   20 79 6F 75 72
	   20 69 6E 70 75
	   74 20 61 6E 64
	   20 63 61 74 65
	   67 6F 72 69 65
	   73 20 61 72 65
	   20 73 65 70 72
	   61 74 65 64 20
	   62 79 3A 00
 000078B9 20 20 20 31 2E	promptSep2 BYTE "   1. Comma ",0
	   20 43 6F 6D 6D
	   61 20 00
 000078C6 20 20 20 32 2E	promptSep3 BYTE "   2. Space ",0
	   20 53 70 61 63
	   65 20 00
 000078D3 46 6F 6C 6C 6F	promptCount BYTE "Following words were included more than one times in the input.",0
	   77 69 6E 67 20
	   77 6F 72 64 73
	   20 77 65 72 65
	   20 69 6E 63 6C
	   75 64 65 64 20
	   6D 6F 72 65 20
	   74 68 61 6E 20
	   6F 6E 65 20 74
	   69 6D 65 73 20
	   69 6E 20 74 68
	   65 20 69 6E 70
	   75 74 2E 00
 00007913 46 6F 6C 6C 6F	promptNoCateg BYTE "Following words were not found in any of the categories.",0
	   77 69 6E 67 20
	   77 6F 72 64 73
	   20 77 65 72 65
	   20 6E 6F 74 20
	   66 6F 75 6E 64
	   20 69 6E 20 61
	   6E 79 20 6F 66
	   20 74 68 65 20
	   63 61 74 65 67
	   6F 72 69 65 73
	   2E 00
 00000000			.code

 00000000			main PROC
 00000000  B8 00002714 R	mov eax, offset foundWords
 00000005  A3 00004E28 R	mov foundWordOffset, eax
 0000000A  E8 00000000 E	call clrScr
 0000000F  E8 00000000 E	call crlf

 00000014  BA 00007717 R	mov edx, offset stars1
 00000019  E8 00000000 E	call writeString
 0000001E  E8 00000000 E	call crlf
 00000023  BA 00007767 R	mov edx, offset projectName
 00000028  E8 00000000 E	call writeString
 0000002D  E8 00000000 E	call crlf
 00000032  BA 00007799 R	mov edx, offset stars2
 00000037  E8 00000000 E	call writeString
 0000003C  E8 00000000 E	call crlf
 00000041  E8 00000000 E	call crlf


				;////////////////////////
				;read from file "input.txt" to inputString 

 00000046  BA 00004F9C R	mov edx, offset inputFile
 0000004B  E8 00000000 E	call openInputFile
 00000050  A3 000076BC R	mov inputFilehandler, eax

 00000055  83 F8 FF		cmp eax, INVALID_HANDLE_VALUE
 00000058  0F 84 00000169	je InputFileNotExist


 0000005E  B9 00004E20		mov ecx, 20000
 00000063  BA 00004FAC R	mov edx, offset inputString
 00000068  A1 000076BC R	mov eax, inputfilehandler
 0000006D  E8 00000000 E	call readFromFile
				;call writeString


				; reading completed from input file, file text moved to inputString
				;///////////////////////////



				;checking if the file has the right format
				;wordFind PROTO, sourceText: ptr byte, tragetText: ptr byte, sourceSize: dword, targetSize: dword

				INVOKE wordFind, addr inputString, addr dot, lengthof inputString, lengthof dot

 00000088  83 FB FF		cmp ebx,-1
 0000008B  0F 84 00000111	je noInputFormat

 00000091  E8 00000229		call inputLowerCase

				;//////////////////////////

 00000096  C7 05 00004F94 R	mov TempFileNames, offset FileNames
	   00004E2C R
 000000A0  8B 0D 00004F8C R	mov ecx,NoOfCategs
 000000A6			OuterLoop:

 000000A6  89 0D 00004F8C R				mov NoOfCategs, ecx

							;//setting flags to zero
 000000AC  B8 00000000					mov eax, 0
 000000B1  A3 00007701 R				mov fileCategWritten, eax
 000000B6  A3 000076FD R				mov inputFileEnded, eax

							;//resetting currentInputIndex
 000000BB  BE 00004FAC R				mov esi, offset inputString
 000000C0  89 35 000076C0 R				mov currentInputIndex, esi 

				 
							INVOKE clearString, offset categString, categStringSize
							;//////////////////////////
							;reading from category food.txt to cagetString

 000000D6  8B 15 00004F94 R				mov edx, TempFileNames
 000000DC  E8 00000000 E				call openInputFile
 000000E1  A3 00004F98 R				mov Categfilehandler, eax

 000000E6  83 F8 FF					cmp eax, INVALID_HANDLE_VALUE
 000000E9  0F 84 0000008F				je FileNotExist


 000000EF  B9 00004E20					mov ecx, 20000
 000000F4  BA 00000004 R				mov edx, offset categString
 000000F9  A1 00004F98 R				mov eax, Categfilehandler
 000000FE  E8 00000000 E				call readFromFile
							;reading completed, text moved to categoryString
							;///////////////////////////


 00000103  8B 0D 000076F9 R				mov ecx, mainLoopCounter
 00000109						innerLoop:
 00000109  89 0D 000076F9 R						mov mainLoopCounter, ecx
 0000010F  A1 000076FD R						mov eax, inputFileEnded
 00000114  83 F8 00							cmp eax, 0
 00000117  75 54							jne breakLoopCateg2

 00000119  E8 000002D4							call extractWord

									INVOKE wordFind, addr categString, addr extractedWord, categStringSize, extractedWordSize
					
 00000139  83 FB FF							cmp ebx, -1
 0000013C  74 27							je loopEnd
									
 0000013E  A1 00007701 R						mov eax, fileCategWritten
 00000143  83 F8 00							cmp eax, 0
 00000146  75 11							jne alreadyPrintedCateg2
									INVOKE printCategName, TempFileNames, CategNameLength	
 00000159						alreadyPrintedCateg2:
									 INVOKE printFoundWord, offset extractedWord
					
 00000163  EB 00					jmp loopEnd
									
 00000165			loopEnd:
									;//restoring ecx after a function call
 00000165  8B 0D 000076F9 R						mov ecx, mainLoopCounter
					
 0000016B  E2 9C					loop Innerloop

 0000016D						breakLoopCateg2:
							
 0000016D  B8 00000000					mov eax,0
 00000172  83 F8 FF					cmp eax, -1
 00000175  75 12					jne skipThis

 00000177  E8 00000000 E				call crlf
							
					

							
 0000017C  EB 0B					jmp skipThis
 0000017E			FileNotExist:
							INVOKE writeFileNotExist, tempFileNames
 00000189			skipThis:

 00000189  83 05 00004F94 R				add TempFileNames,32
	   20
 00000190  8B 0D 00004F8C R				mov ecx,NoOfCategs
 00000196  49						dec ecx
 00000197  83 F9 00					cmp ecx, 0
 0000019A  0F 85 FFFFFF06	jnz outerLoop




 000001A0  EB 2F		jmp skipDownStatement
 000001A2			noInputFormat:
 000001A2  E8 00000000 E		call crlf
 000001A7  BA 00007819 R		mov edx, offset promptNoDot1
 000001AC  E8 00000000 E		call writeString
 000001B1  E8 00000000 E		call crlf
 000001B6  BA 0000784D R		mov edx, offset promptNoDot2
 000001BB  E8 00000000 E		call writeString
 000001C0  E8 00000000 E		call crlf
 000001C5  EB 0A		jmp skipDownStatement

 000001C7			InputFileNotExist:
					INVOKE writeFileNotExist, addr inputFile

 000001D1			skipDownStatement:


 000001D1  E8 00000000 E	call crlf
 000001D6  E8 00000000 E	call crlf
 000001DB  BA 000077E9 R	mov edx, offset smallSpace
 000001E0  E8 00000000 E	call writeString
				;//setting flags to zero
 000001E5  B8 00000000					mov eax, 0
 000001EA  A3 00007701 R				mov fileCategWritten, eax
 000001EF  A3 000076FD R				mov inputFileEnded, eax

							;//resetting currentInputIndex
 000001F4  BE 00004FAC R				mov esi, offset inputString
 000001F9  89 35 000076C0 R				mov currentInputIndex, esi 


 000001FF			loopNoCateg:
 000001FF  89 0D 000076F9 R	 			mov mainLoopCounter, ecx
 00000205  A1 000076FD R				mov eax, inputFileEnded
 0000020A  83 F8 00					cmp eax, 0
 0000020D  75 68					jne breakLoopNoCateg

 0000020F  E8 000001DE					call extractWord

							INVOKE wordFind, addr foundWords, addr extractedWord, foundWordsSize, extractedWordSize
					
 0000022F  83 FB FF					cmp ebx, -1
 00000232  75 CB					jne loopNoCateg
							
 00000234  A1 00007701 R				mov eax, fileCategWritten
 00000239  83 F8 00					cmp eax, 0
 0000023C  75 19					jne alreadyPrintedNoCateg
 0000023E  BA 00007913 R				mov edx, offset promptNoCateg
 00000243  E8 00000000 E				call writeString
 00000248  E8 00000000 E				call crlf
						
 0000024D  C7 05 00007701 R				mov fileCategWritten, -1
	   FFFFFFFF
 00000257			alreadyPrintedNoCateg:
 00000257  BA 0000770F R				mov edx, offset bigSpace
 0000025C  E8 00000000 E				call writeString
 00000261  E8 00000000 E				call writeString
							INVOKE printFoundWord, offset extractedWord
							
 00000270  E8 00000000 E				call crlf
 00000275  E2 88			loop LoopNoCateg

 00000277			breakLoopNoCateg:

 00000277  E8 00000000 E	call crlf
 0000027C  E8 00000000 E	call crlf
 00000281  E8 00000000 E	call crlf
 00000286  BA 00007717 R	mov edx, offset stars1
 0000028B  E8 00000000 E	call writeString
 00000290  E8 00000000 E	call crlf
 00000295  BA 00007767 R	mov edx, offset projectName
 0000029A  E8 00000000 E	call writeString
 0000029F  E8 00000000 E	call crlf
 000002A4  BA 00007799 R	mov edx, offset stars2
 000002A9  E8 00000000 E	call writeString
 000002AE  E8 00000000 E	call crlf
 000002B3  E8 00000000 E	call crlf





				exit
 000002BF			main ENDP 


 000002BF			inputLowerCase PROC
 000002BF  B8 00000000		mov eax, 0
 000002C4  B9 00002710		mov ecx, 10000
 000002C9  BE 00004FAC R	mov esi, offset inputString
 000002CE			loopInputLowerCase:
					
 000002CE  8A 06			mov al, [esi]
 000002D0  3C 2E			cmp al, '.'
 000002D2  74 13			je breakInputLowerCase
 000002D4  3A 05 000076F0 R		cmp al, sepChar
 000002DA  74 08			je NextInputLowerCase
 000002DC  3C 61			cmp al, 097d
 000002DE  73 04			jae NextInputLowerCase
 000002E0  04 20			add al, 32
 000002E2  88 06			mov [esi], al
					

 000002E4			NextInputLowerCase:
 000002E4  46				inc esi
 000002E5  E2 E7		loop loopInputLowerCase

 000002E7			breakInputLowerCase:

 000002E7  C3			ret
 000002E8			inputLowerCase ENDP

 000002E8			writeFileNotExist PROC, fileName:PTR BYTE

 000002EB  E8 00000000 E	call crlf
 000002F0  E8 00000000 E	call crlf
 000002F5  BA 000077EC R	mov edx, offset promptFile1
 000002FA  E8 00000000 E	call writeString
 000002FF  8B 55 08		mov edx, fileName
 00000302  E8 00000000 E	call writeString
 00000307  BA 000077F3 R	mov edx, offset promptFile2
 0000030C  E8 00000000 E	call writeString
 00000311  E8 00000000 E	call crlf
 00000316  E8 00000000 E	call crlf

				ret
 0000031F			writeFileNotExist ENDP



 0000031F			clearString PROC, textString:PTR BYTE, StringLength:DWORD

 00000322  8B 7D 08		mov edi, textString
 00000325  B8 00000000		mov eax, 0
 0000032A  8B 4D 0C		mov ecx, stringLength
 0000032D  F3/ AA		rep stosb

				ret
 00000333			clearString ENDP


 00000333			printFoundWord PROC, foundWord:PTR BYTE

				INVOKE wordFind, addr foundWords, addr extractedWord, lengthof foundWords, extractedWordSize

 00000350  83 FB FF		cmp ebx, -1
 00000353  75 2E		jne returnPrintFoundWord

 00000355  8B 0D 000076EC R	mov ecx, extractedWordSize
 0000035B  8B 3D 00004E28 R	mov edi, foundWordOffset
 00000361  BE 000076C4 R	mov esi, offset extractedWord 
 00000366  F3/ A4		rep movsb
 00000368  89 3D 00004E28 R	mov foundWordOffset, edi


 0000036E  FF 45 08		inc foundword
 00000371  8B 55 08		mov edx, foundword
 00000374  E8 00000000 E	call writeString

 00000379  B8 FFFFFFFF		mov eax,-1
 0000037E  A3 00007705 R	mov NoWordFound,eax


 00000383			returnPrintFoundWord:
 00000383  BE 00000000		mov esi,0
 00000388  BF 00000000		mov edi,0
 0000038D  B9 00000000		mov ecx, 0
				ret
 00000396			printFoundWord ENDP



 00000396			printCategName PROC, categName:PTR BYTE, categNameSize:DWORD

 00000399  E8 00000000 E	call crlf
 0000039E  BA 000077E9 R	mov edx, offset smallSpace
 000003A3  E8 00000000 E	call writeString
 000003A8  8B 75 08		mov esi, categName
 000003AB  83 C6 0B		add esi, 11
 000003AE  8B 4D 0C		mov ecx, categNameSize
 000003B1  B8 00000000		mov eax,0
 000003B6  A3 00007701 R	mov fileCategWritten, eax

 000003BB			loopPrintCategName:
 000003BB  8A 06						mov al, [esi]
 000003BD  3C 2E						cmp al, '.'
 000003BF  74 0A						je breakPrintCategName
 000003C1  8A 06						mov al, [esi]
 000003C3  E8 00000000 E					call writeChar
 000003C8  46							inc esi
 000003C9  E2 F0		loop loopPrintCategName

 000003CB			breakPrintCategName:
 000003CB  BA 00007709 R	mov edx, offset semiColon
 000003D0  E8 00000000 E	call writeString
 000003D5  E8 00000000 E	call crlf

 000003DA  B8 0000000F		mov eax, 0fh
 000003DF  A3 00007701 R	mov fileCategWritten, eax


 000003E4  BA 0000770F R	mov edx, offset bigSpace
 000003E9  E8 00000000 E	call writeString

				ret
 000003F2			printCategName ENDP




 000003F2			extractWord PROC

				INVOKE clearString, addr extractedWord, extractedWordSize 
 00000402  B9 000000C8		mov ecx, 200

 00000407  B8 00000000		mov eax, 0
 0000040C  BB 00000000		mov ebx, 0
 00000411  A3 000076EC R	mov extractedWordSize, eax

 00000416  8B 35 000076C0 R	mov esi, currentInputIndex
 0000041C  BF 000076C4 R	mov edi, offset extractedWord

 00000421  A0 000076F0 R	mov al, sepChar
 00000426  AA			stosb
 00000427  FF 05 000076EC R	inc extractedWordSize


 0000042D  3C 2E		cmp al, '.'
 0000042F  74 31		je return

 00000431			noComma:
 00000431			copy:
 00000431  8A 06				 mov al, [esi]
 00000433  3A 05 000076F0 R			 cmp al, sepChar
 00000439  74 1A				 je addComma
						 				 
 0000043B  8A 1E				 mov bl, [esi]
 0000043D  80 FB 2E				 cmp bl, '.'
 00000440  74 09				 je FileEnded

 00000442  A4					 movsb
 00000443  FF 05 000076EC R			 inc extractedWordSize
 00000449  E2 E6		loop copy

 0000044B			FileEnded:
 0000044B  B8 0000000F		mov eax, 0fh
 00000450  A3 000076FD R	mov inputFileEnded, eax

 00000455			addComma:
 00000455  A0 000076F0 R	mov al, sepChar
 0000045A  AA			stosb
 0000045B  46			inc esi
 0000045C  FF 05 000076EC R	inc extractedWordSize



 00000462			return:		  ;///you need to find size of the word here	
 00000462  89 35 000076C0 R	mov currentInputIndex, esi 		        ;///preserve esi for next use, if there's a problem 

 00000468  C3			ret
 00000469			extractWord ENDP

 00000469			wordFind proc uses ecx esi edi eax, sourceText: ptr byte, tragetText: ptr byte, sourceSize: dword, targetSize: dword

 00000470  8B 4D 10		  mov ecx, sourceSize
 00000473  8B 75 08		  mov esi, sourceText
 00000476  8B 7D 0C		  mov edi, tragetText
 00000479  B8 00000000		  mov eax, 0
				 
 0000047E			  L2:
				  
 0000047E  3B 45 14		    cmp eax, targetSize
 00000481  74 23		    jz L5

 00000483  A6			    cmpsb
 00000484  74 10		    jz L3
 00000486  8B 7D 0C		    mov edi, tragetText
 00000489  83 F8 01		    cmp eax, 1
 0000048C  72 09		    jb L4
 0000048E  4E			    dec esi
 0000048F  B8 00000000		    mov eax, 0
 00000494  EB 01		    jmp L4

 00000496			    L3: 
 00000496  40			    inc eax
				   
 00000497			  L4: 
 00000497  E2 E5		  loop L2
				 
				  ;not found
 00000499  BB FFFFFFFF		  mov ebx, -1
				  ret

 000004A6			  L5: ;found
 000004A6  8B DE		      mov ebx, esi
 000004A8  2B 5D 08		      sub ebx, sourceText
 000004AB  2B D8		      sub ebx, eax
				  ret
 000004B5			wordFind endp

				END main
Microsoft (R) Macro Assembler Version 12.00.21005.1	    11/27/19 02:15:19
MY First Progra					     Symbols 2 - 1




Structures and Unions:

                N a m e                  Size
                                         Offset      Type

CONSOLE_CURSOR_INFO  . . . . . .	 00000008
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  bVisible . . . . . . . . . . .	 00000004	 DWord
CONSOLE_SCREEN_BUFFER_INFO . . .	 00000016
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCursorPosition . . . . . . .	 00000004	 DWord
  wAttributes  . . . . . . . . .	 00000008	 Word
  srWindow . . . . . . . . . . .	 0000000A	 QWord
  dwMaximumWindowSize  . . . . .	 00000012	 DWord
COORD  . . . . . . . . . . . . .	 00000004
  X  . . . . . . . . . . . . . .	 00000000	 Word
  Y  . . . . . . . . . . . . . .	 00000002	 Word
FILETIME . . . . . . . . . . . .	 00000008
  loDateTime . . . . . . . . . .	 00000000	 DWord
  hiDateTime . . . . . . . . . .	 00000004	 DWord
FOCUS_EVENT_RECORD . . . . . . .	 00000004
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
FPU_ENVIRON  . . . . . . . . . .	 0000001C
  controlWord  . . . . . . . . .	 00000000	 Word
  statusWord . . . . . . . . . .	 00000004	 Word
  tagWord  . . . . . . . . . . .	 00000008	 Word
  instrPointerOffset . . . . . .	 0000000C	 DWord
  instrPointerSelector . . . . .	 00000010	 DWord
  operandPointerOffset . . . . .	 00000014	 DWord
  operandPointerSelector . . . .	 00000018	 Word
INPUT_RECORD . . . . . . . . . .	 00000014
  EventType  . . . . . . . . . .	 00000000	 Word
  Event  . . . . . . . . . . . .	 00000004	 XmmWord
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
  dwSize . . . . . . . . . . . .	 00000000	 DWord
  dwCommandId  . . . . . . . . .	 00000000	 DWord
  bSetFocus  . . . . . . . . . .	 00000000	 DWord
KEY_EVENT_RECORD . . . . . . . .	 00000010
  bKeyDown . . . . . . . . . . .	 00000000	 DWord
  wRepeatCount . . . . . . . . .	 00000004	 Word
  wVirtualKeyCode  . . . . . . .	 00000006	 Word
  wVirtualScanCode . . . . . . .	 00000008	 Word
  uChar  . . . . . . . . . . . .	 0000000A	 Word
  UnicodeChar  . . . . . . . . .	 00000000	 Word
  AsciiChar  . . . . . . . . . .	 00000000	 Byte
  dwControlKeyState  . . . . . .	 0000000C	 DWord
MENU_EVENT_RECORD  . . . . . . .	 00000004
  dwCommandId  . . . . . . . . .	 00000000	 DWord
MOUSE_EVENT_RECORD . . . . . . .	 00000010
  dwMousePosition  . . . . . . .	 00000000	 DWord
  dwButtonState  . . . . . . . .	 00000004	 DWord
  dwMouseControlKeyState . . . .	 00000008	 DWord
  dwEventFlags . . . . . . . . .	 0000000C	 DWord
SMALL_RECT . . . . . . . . . . .	 00000008
  Left . . . . . . . . . . . . .	 00000000	 Word
  Top  . . . . . . . . . . . . .	 00000002	 Word
  Right  . . . . . . . . . . . .	 00000004	 Word
  Bottom . . . . . . . . . . . .	 00000006	 Word
SYSTEMTIME . . . . . . . . . . .	 00000010
  wYear  . . . . . . . . . . . .	 00000000	 Word
  wMonth . . . . . . . . . . . .	 00000002	 Word
  wDayOfWeek . . . . . . . . . .	 00000004	 Word
  wDay . . . . . . . . . . . . .	 00000006	 Word
  wHour  . . . . . . . . . . . .	 00000008	 Word
  wMinute  . . . . . . . . . . .	 0000000A	 Word
  wSecond  . . . . . . . . . . .	 0000000C	 Word
  wMilliseconds  . . . . . . . .	 0000000E	 Word
WINDOW_BUFFER_SIZE_RECORD  . . .	 00000004
  dwSize . . . . . . . . . . . .	 00000000	 DWord


Segments and Groups:

                N a m e                 Size     Length   Align   Combine Class

FLAT . . . . . . . . . . . . . .	GROUP
STACK  . . . . . . . . . . . . .	32 Bit	 00001000 Para	  Stack	  'STACK'	 
_DATA  . . . . . . . . . . . . .	32 Bit	 0000794C Para	  Public  'DATA'	
_TEXT  . . . . . . . . . . . . .	32 Bit	 000004B5 Para	  Public  'CODE'	


Procedures, parameters, and locals:

                N a m e                 Type     Value    Attr

CloseFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CloseHandle  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Clrscr . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateFileA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
CreateOutputFile . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Crlf . . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Delay  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpMem  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
DumpRegs . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ExitProcess  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToDosDateTime  . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FileTimeToSystemTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FlushConsoleInputBuffer  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
FormatMessageA . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandLineA  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetCommandTail . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCP . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetConsoleScreenBufferInfo . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetDateTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetFileTime  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetKeyState  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLastError . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMaxXY . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetMseconds  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetNumberOfConsoleInputEvents  .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetProcessHeap . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetStdHandle . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetSystemTime  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
GetTickCount . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Gotoxy . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapAlloc  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapCreate . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapDestroy  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapFree . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
HeapSize . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
IsDigit  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
LocalFree  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MessageBoxA  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBoxAsk  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
MsgBox . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
OpenInputFile  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseDecimal32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ParseInteger32 . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
PeekConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Random32 . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
RandomRange  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Randomize  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadChar . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleA . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadConsoleInputA  . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadDec  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFile . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFloat  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadFromFile . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadHex  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadInt  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKeyFlush . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadKey  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ReadString . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleCursorPosition . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleMode . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleScreenBufferSize . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTextAttribute  . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleTitleA . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetConsoleWindowInfo . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetFilePointer . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetLocalTime . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SetTextColor . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
ShowFPUStack . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Sleep  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
StrLength  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_compare  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_copy . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_length . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_trim . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
Str_ucase  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
SystemTimeToFileTime . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WaitMsg  . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBinB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteBin . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteChar  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleA  . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputAttribute  . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteConsoleOutputCharacterA . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteDec . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFile  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteFloat . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHexB  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteHex . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteInt . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrameName  . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteStackFrame  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteString  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteToFile  . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
WriteWindowsMsg  . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External STDCALL
clearString  . . . . . . . . . .	P Near	 0000031F _TEXT	Length= 00000014 Public STDCALL
  textString . . . . . . . . . .	DWord	 bp + 00000008
  StringLength . . . . . . . . .	DWord	 bp + 0000000C
extractWord  . . . . . . . . . .	P Near	 000003F2 _TEXT	Length= 00000077 Public STDCALL
  noComma  . . . . . . . . . . .	L Near	 00000431 _TEXT	
  copy . . . . . . . . . . . . .	L Near	 00000431 _TEXT	
  FileEnded  . . . . . . . . . .	L Near	 0000044B _TEXT	
  addComma . . . . . . . . . . .	L Near	 00000455 _TEXT	
  return . . . . . . . . . . . .	L Near	 00000462 _TEXT	
inputLowerCase . . . . . . . . .	P Near	 000002BF _TEXT	Length= 00000029 Public STDCALL
  loopInputLowerCase . . . . . .	L Near	 000002CE _TEXT	
  NextInputLowerCase . . . . . .	L Near	 000002E4 _TEXT	
  breakInputLowerCase  . . . . .	L Near	 000002E7 _TEXT	
main . . . . . . . . . . . . . .	P Near	 00000000 _TEXT	Length= 000002BF Public STDCALL
  OuterLoop  . . . . . . . . . .	L Near	 000000A6 _TEXT	
  innerLoop  . . . . . . . . . .	L Near	 00000109 _TEXT	
  alreadyPrintedCateg2 . . . . .	L Near	 00000159 _TEXT	
  loopEnd  . . . . . . . . . . .	L Near	 00000165 _TEXT	
  breakLoopCateg2  . . . . . . .	L Near	 0000016D _TEXT	
  FileNotExist . . . . . . . . .	L Near	 0000017E _TEXT	
  skipThis . . . . . . . . . . .	L Near	 00000189 _TEXT	
  noInputFormat  . . . . . . . .	L Near	 000001A2 _TEXT	
  InputFileNotExist  . . . . . .	L Near	 000001C7 _TEXT	
  skipDownStatement  . . . . . .	L Near	 000001D1 _TEXT	
  loopNoCateg  . . . . . . . . .	L Near	 000001FF _TEXT	
  alreadyPrintedNoCateg  . . . .	L Near	 00000257 _TEXT	
  breakLoopNoCateg . . . . . . .	L Near	 00000277 _TEXT	
printCategName . . . . . . . . .	P Near	 00000396 _TEXT	Length= 0000005C Public STDCALL
  categName  . . . . . . . . . .	DWord	 bp + 00000008
  categNameSize  . . . . . . . .	DWord	 bp + 0000000C
  loopPrintCategName . . . . . .	L Near	 000003BB _TEXT	
  breakPrintCategName  . . . . .	L Near	 000003CB _TEXT	
printFoundWord . . . . . . . . .	P Near	 00000333 _TEXT	Length= 00000063 Public STDCALL
  foundWord  . . . . . . . . . .	DWord	 bp + 00000008
  returnPrintFoundWord . . . . .	L Near	 00000383 _TEXT	
printf . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
scanf  . . . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C
wordFind . . . . . . . . . . . .	P Near	 00000469 _TEXT	Length= 0000004C Public STDCALL
  sourceText . . . . . . . . . .	DWord	 bp + 00000008
  tragetText . . . . . . . . . .	DWord	 bp + 0000000C
  sourceSize . . . . . . . . . .	DWord	 bp + 00000010
  targetSize . . . . . . . . . .	DWord	 bp + 00000014
  L2 . . . . . . . . . . . . . .	L Near	 0000047E _TEXT	
  L3 . . . . . . . . . . . . . .	L Near	 00000496 _TEXT	
  L4 . . . . . . . . . . . . . .	L Near	 00000497 _TEXT	
  L5 . . . . . . . . . . . . . .	L Near	 000004A6 _TEXT	
writeFileNotExist  . . . . . . .	P Near	 000002E8 _TEXT	Length= 00000037 Public STDCALL
  fileName . . . . . . . . . . .	DWord	 bp + 00000008
wsprintfA  . . . . . . . . . . .	P Near	 00000000 FLAT	Length= 00000000 External C


Symbols:

                N a m e                 Type     Value    Attr

@CodeSize  . . . . . . . . . . .	Number	 00000000h   
@DataSize  . . . . . . . . . . .	Number	 00000000h   
@Interface . . . . . . . . . . .	Number	 00000003h   
@Model . . . . . . . . . . . . .	Number	 00000007h   
@code  . . . . . . . . . . . . .	Text   	 _TEXT
@data  . . . . . . . . . . . . .	Text   	 FLAT
@fardata?  . . . . . . . . . . .	Text   	 FLAT
@fardata . . . . . . . . . . . .	Text   	 FLAT
@stack . . . . . . . . . . . . .	Text   	 FLAT
ALT_MASK . . . . . . . . . . . .	Number	 00000003h   
CAPSLOCK_ON  . . . . . . . . . .	Number	 00000080h   
CREATE_ALWAYS  . . . . . . . . .	Number	 00000002h   
CREATE_NEW . . . . . . . . . . .	Number	 00000001h   
CTRL_MASK  . . . . . . . . . . .	Number	 0000000Ch   
CategNameLength  . . . . . . . .	DWord	 00004F90 _DATA	
Categfilehandler . . . . . . . .	DWord	 00004F98 _DATA	
CreateFile . . . . . . . . . . .	Text   	 CreateFileA
DO_NOT_SHARE . . . . . . . . . .	Number	 00000000h   
ENABLE_ECHO_INPUT  . . . . . . .	Number	 00000004h   
ENABLE_LINE_INPUT  . . . . . . .	Number	 00000002h   
ENABLE_MOUSE_INPUT . . . . . . .	Number	 00000010h   
ENABLE_PROCESSED_INPUT . . . . .	Number	 00000001h   
ENABLE_PROCESSED_OUTPUT  . . . .	Number	 00000001h   
ENABLE_WINDOW_INPUT  . . . . . .	Number	 00000008h   
ENABLE_WRAP_AT_EOL_OUTPUT  . . .	Number	 00000002h   
ENHANCED_KEY . . . . . . . . . .	Number	 00000100h   
FALSE  . . . . . . . . . . . . .	Number	 00000000h   
FILE_APPEND_DATA . . . . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_ARCHIVE . . . . .	Number	 00000020h   
FILE_ATTRIBUTE_COMPRESSED  . . .	Number	 00000800h   
FILE_ATTRIBUTE_DEVICE  . . . . .	Number	 00000040h   
FILE_ATTRIBUTE_DIRECTORY . . . .	Number	 00000010h   
FILE_ATTRIBUTE_ENCRYPTED . . . .	Number	 00004000h   
FILE_ATTRIBUTE_HIDDEN  . . . . .	Number	 00000002h   
FILE_ATTRIBUTE_NORMAL  . . . . .	Number	 00000080h   
FILE_ATTRIBUTE_NOT_CONTENT_INDEXED .	Number	 00002000h   
FILE_ATTRIBUTE_OFFLINE . . . . .	Number	 00001000h   
FILE_ATTRIBUTE_READONLY  . . . .	Number	 00000001h   
FILE_ATTRIBUTE_REPARSE_POINT . .	Number	 00000400h   
FILE_ATTRIBUTE_SPARSE_FILE . . .	Number	 00000200h   
FILE_ATTRIBUTE_SYSTEM  . . . . .	Number	 00000004h   
FILE_ATTRIBUTE_TEMPORARY . . . .	Number	 00000100h   
FILE_BEGIN . . . . . . . . . . .	Number	 00000000h   
FILE_CURRENT . . . . . . . . . .	Number	 00000001h   
FILE_DELETE_CHILD  . . . . . . .	Number	 00000040h   
FILE_END . . . . . . . . . . . .	Number	 00000002h   
FILE_READ_DATA . . . . . . . . .	Number	 00000001h   
FILE_SHARE_DELETE  . . . . . . .	Number	 00000004h   
FILE_SHARE_READ  . . . . . . . .	Number	 00000001h   
FILE_SHARE_WRITE . . . . . . . .	Number	 00000002h   
FILE_WRITE_DATA  . . . . . . . .	Number	 00000002h   
FOCUS_EVENT  . . . . . . . . . .	Number	 00000010h   
FORMAT_MESSAGE_ALLOCATE_BUFFER .	Number	 00000100h   
FORMAT_MESSAGE_FROM_SYSTEM . . .	Number	 00001000h   
FileNames  . . . . . . . . . . .	Byte	 00004E2C _DATA	
FormatMessage  . . . . . . . . .	Text   	 FormatMessageA
GENERIC_ALL  . . . . . . . . . .	Number	 10000000h   
GENERIC_EXECUTE  . . . . . . . .	Number	 20000000h   
GENERIC_READ . . . . . . . . . .	Number	 -80000000h   
GENERIC_WRITE  . . . . . . . . .	Number	 40000000h   
GetCommandLine . . . . . . . . .	Text   	 GetCommandLineA
HANDLE . . . . . . . . . . . . .	Text   	 DWORD
HEAP_GENERATE_EXCEPTIONS . . . .	Number	 00000004h   
HEAP_GROWABLE  . . . . . . . . .	Number	 00000002h   
HEAP_NO_SERIALIZE  . . . . . . .	Number	 00000001h   
HEAP_REALLOC_IN_PLACE_ONLY . . .	Number	 00000010h   
HEAP_ZERO_MEMORY . . . . . . . .	Number	 00000008h   
IDABORT  . . . . . . . . . . . .	Number	 00000003h   
IDCANCEL . . . . . . . . . . . .	Number	 00000002h   
IDCLOSE  . . . . . . . . . . . .	Number	 00000008h   
IDCONTINUE . . . . . . . . . . .	Number	 0000000Bh   
IDHELP . . . . . . . . . . . . .	Number	 00000009h   
IDIGNORE . . . . . . . . . . . .	Number	 00000005h   
IDNO . . . . . . . . . . . . . .	Number	 00000007h   
IDOK . . . . . . . . . . . . . .	Number	 00000001h   
IDRETRY  . . . . . . . . . . . .	Number	 00000004h   
IDTIMEOUT  . . . . . . . . . . .	Number	 00007D00h   
IDTRYAGAIN . . . . . . . . . . .	Number	 0000000Ah   
IDYES  . . . . . . . . . . . . .	Number	 00000006h   
INVALID_HANDLE_VALUE . . . . . .	Number	 -00000001h   
KBDOWN_FLAG  . . . . . . . . . .	Number	 00000001h   
KEY_EVENT  . . . . . . . . . . .	Number	 00000001h   
KEY_MASKS  . . . . . . . . . . .	Number	 0000001Fh   
LEFT_ALT_PRESSED . . . . . . . .	Number	 00000002h   
LEFT_CTRL_PRESSED  . . . . . . .	Number	 00000008h   
MB_ABORTRETRYIGNORE  . . . . . .	Number	 00000002h   
MB_APPLMODAL . . . . . . . . . .	Number	 00000000h   
MB_CANCELTRYCONTINUE . . . . . .	Number	 00000006h   
MB_DEFBUTTON1  . . . . . . . . .	Number	 00000000h   
MB_DEFBUTTON2  . . . . . . . . .	Number	 00000100h   
MB_DEFBUTTON3  . . . . . . . . .	Number	 00000200h   
MB_DEFBUTTON4  . . . . . . . . .	Number	 00000300h   
MB_HELP  . . . . . . . . . . . .	Number	 00004000h   
MB_ICONASTERISK  . . . . . . . .	Number	 00000040h   
MB_ICONERROR . . . . . . . . . .	Number	 00000010h   
MB_ICONEXCLAMATION . . . . . . .	Number	 00000030h   
MB_ICONHAND  . . . . . . . . . .	Number	 00000010h   
MB_ICONINFORMATION . . . . . . .	Number	 00000040h   
MB_ICONQUESTION  . . . . . . . .	Number	 00000020h   
MB_ICONSTOP  . . . . . . . . . .	Number	 00000010h   
MB_ICONWARNING . . . . . . . . .	Number	 00000030h   
MB_OKCANCEL  . . . . . . . . . .	Number	 00000001h   
MB_OK  . . . . . . . . . . . . .	Number	 00000000h   
MB_RETRYCANCEL . . . . . . . . .	Number	 00000005h   
MB_SYSTEMMODAL . . . . . . . . .	Number	 00001000h   
MB_TASKMODAL . . . . . . . . . .	Number	 00002000h   
MB_USERICON  . . . . . . . . . .	Number	 00000080h   
MB_YESNOCANCEL . . . . . . . . .	Number	 00000003h   
MB_YESNO . . . . . . . . . . . .	Number	 00000004h   
MENU_EVENT . . . . . . . . . . .	Number	 00000008h   
MOUSE_EVENT  . . . . . . . . . .	Number	 00000002h   
MessageBox . . . . . . . . . . .	Text   	 MessageBoxA
NULL . . . . . . . . . . . . . .	Number	 00000000h   
NUMLOCK_ON . . . . . . . . . . .	Number	 00000020h   
NoOfCategs . . . . . . . . . . .	DWord	 00004F8C _DATA	
OPEN_ALWAYS  . . . . . . . . . .	Number	 00000004h   
OPEN_EXISTING  . . . . . . . . .	Number	 00000003h   
PeekConsoleInput . . . . . . . .	Text   	 PeekConsoleInputA
RIGHT_ALT_PRESSED  . . . . . . .	Number	 00000001h   
RIGHT_CTRL_PRESSED . . . . . . .	Number	 00000004h   
ReadConsoleInput . . . . . . . .	Text   	 ReadConsoleInputA
ReadConsole  . . . . . . . . . .	Text   	 ReadConsoleA
SCROLLLOCK_ON  . . . . . . . . .	Number	 00000040h   
SHIFT_MASK . . . . . . . . . . .	Number	 00000010h   
SHIFT_PRESSED  . . . . . . . . .	Number	 00000010h   
STD_ERROR_HANDLE . . . . . . . .	Number	 -0000000Ch   
STD_INPUT_HANDLE . . . . . . . .	Number	 -0000000Ah   
STD_OUTPUT_HANDLE  . . . . . . .	Number	 -0000000Bh   
SetConsoleTitle  . . . . . . . .	Text   	 SetConsoleTitleA
TAB  . . . . . . . . . . . . . .	Number	 00000009h   
TRUE . . . . . . . . . . . . . .	Number	 00000001h   
TRUNCATE_EXISTING  . . . . . . .	Number	 00000005h   
TempFileNames  . . . . . . . . .	DWord	 00004F94 _DATA	
VK_11  . . . . . . . . . . . . .	Number	 000000BDh   
VK_12  . . . . . . . . . . . . .	Number	 000000BBh   
VK_ADD . . . . . . . . . . . . .	Number	 0000006Bh   
VK_BACK  . . . . . . . . . . . .	Number	 00000008h   
VK_CANCEL  . . . . . . . . . . .	Number	 00000003h   
VK_CAPITAL . . . . . . . . . . .	Number	 00000014h   
VK_CLEAR . . . . . . . . . . . .	Number	 0000000Ch   
VK_CONTROL . . . . . . . . . . .	Number	 00000011h   
VK_DECIMAL . . . . . . . . . . .	Number	 0000006Eh   
VK_DELETE  . . . . . . . . . . .	Number	 0000002Eh   
VK_DIVIDE  . . . . . . . . . . .	Number	 0000006Fh   
VK_DOWN  . . . . . . . . . . . .	Number	 00000028h   
VK_END . . . . . . . . . . . . .	Number	 00000023h   
VK_ESCAPE  . . . . . . . . . . .	Number	 0000001Bh   
VK_EXECUTE . . . . . . . . . . .	Number	 0000002Bh   
VK_F10 . . . . . . . . . . . . .	Number	 00000079h   
VK_F11 . . . . . . . . . . . . .	Number	 0000007Ah   
VK_F12 . . . . . . . . . . . . .	Number	 0000007Bh   
VK_F13 . . . . . . . . . . . . .	Number	 0000007Ch   
VK_F14 . . . . . . . . . . . . .	Number	 0000007Dh   
VK_F15 . . . . . . . . . . . . .	Number	 0000007Eh   
VK_F16 . . . . . . . . . . . . .	Number	 0000007Fh   
VK_F17 . . . . . . . . . . . . .	Number	 00000080h   
VK_F18 . . . . . . . . . . . . .	Number	 00000081h   
VK_F19 . . . . . . . . . . . . .	Number	 00000082h   
VK_F1  . . . . . . . . . . . . .	Number	 00000070h   
VK_F20 . . . . . . . . . . . . .	Number	 00000083h   
VK_F21 . . . . . . . . . . . . .	Number	 00000084h   
VK_F22 . . . . . . . . . . . . .	Number	 00000085h   
VK_F23 . . . . . . . . . . . . .	Number	 00000086h   
VK_F24 . . . . . . . . . . . . .	Number	 00000087h   
VK_F2  . . . . . . . . . . . . .	Number	 00000071h   
VK_F3  . . . . . . . . . . . . .	Number	 00000072h   
VK_F4  . . . . . . . . . . . . .	Number	 00000073h   
VK_F5  . . . . . . . . . . . . .	Number	 00000074h   
VK_F6  . . . . . . . . . . . . .	Number	 00000075h   
VK_F7  . . . . . . . . . . . . .	Number	 00000076h   
VK_F8  . . . . . . . . . . . . .	Number	 00000077h   
VK_F9  . . . . . . . . . . . . .	Number	 00000078h   
VK_HELP  . . . . . . . . . . . .	Number	 0000002Fh   
VK_HOME  . . . . . . . . . . . .	Number	 00000024h   
VK_INSERT  . . . . . . . . . . .	Number	 0000002Dh   
VK_LBUTTON . . . . . . . . . . .	Number	 00000001h   
VK_LCONTROL  . . . . . . . . . .	Number	 000000A2h   
VK_LEFT  . . . . . . . . . . . .	Number	 00000025h   
VK_LMENU . . . . . . . . . . . .	Number	 000000A4h   
VK_LSHIFT  . . . . . . . . . . .	Number	 000000A0h   
VK_MENU  . . . . . . . . . . . .	Number	 00000012h   
VK_MULTIPLY  . . . . . . . . . .	Number	 0000006Ah   
VK_NEXT  . . . . . . . . . . . .	Number	 00000022h   
VK_NUMLOCK . . . . . . . . . . .	Number	 00000090h   
VK_NUMPAD0 . . . . . . . . . . .	Number	 00000060h   
VK_NUMPAD1 . . . . . . . . . . .	Number	 00000061h   
VK_NUMPAD2 . . . . . . . . . . .	Number	 00000062h   
VK_NUMPAD3 . . . . . . . . . . .	Number	 00000063h   
VK_NUMPAD4 . . . . . . . . . . .	Number	 00000064h   
VK_NUMPAD5 . . . . . . . . . . .	Number	 00000065h   
VK_NUMPAD6 . . . . . . . . . . .	Number	 00000066h   
VK_NUMPAD7 . . . . . . . . . . .	Number	 00000067h   
VK_NUMPAD8 . . . . . . . . . . .	Number	 00000068h   
VK_NUMPAD9 . . . . . . . . . . .	Number	 00000069h   
VK_PAUSE . . . . . . . . . . . .	Number	 00000013h   
VK_PRINT . . . . . . . . . . . .	Number	 0000002Ah   
VK_PRIOR . . . . . . . . . . . .	Number	 00000021h   
VK_RBUTTON . . . . . . . . . . .	Number	 00000002h   
VK_RCONTROL  . . . . . . . . . .	Number	 000000A3h   
VK_RETURN  . . . . . . . . . . .	Number	 0000000Dh   
VK_RIGHT . . . . . . . . . . . .	Number	 00000027h   
VK_RMENU . . . . . . . . . . . .	Number	 000000A5h   
VK_RSHIFT  . . . . . . . . . . .	Number	 000000A1h   
VK_SCROLL  . . . . . . . . . . .	Number	 00000091h   
VK_SEPARATER . . . . . . . . . .	Number	 0000006Ch   
VK_SHIFT . . . . . . . . . . . .	Number	 00000010h   
VK_SNAPSHOT  . . . . . . . . . .	Number	 0000002Ch   
VK_SPACE . . . . . . . . . . . .	Number	 00000020h   
VK_SUBTRACT  . . . . . . . . . .	Number	 0000006Dh   
VK_TAB . . . . . . . . . . . . .	Number	 00000009h   
VK_UP  . . . . . . . . . . . . .	Number	 00000026h   
WINDOW_BUFFER_SIZE_EVENT . . . .	Number	 00000004h   
WriteConsoleOutputCharacter  . .	Text   	 WriteConsoleOutputCharacterA
WriteConsole . . . . . . . . . .	Text   	 WriteConsoleA
bigSpace . . . . . . . . . . . .	Byte	 0000770F _DATA	
black  . . . . . . . . . . . . .	Number	 00000000h   
blue . . . . . . . . . . . . . .	Number	 00000001h   
brown  . . . . . . . . . . . . .	Number	 00000006h   
categStringSize  . . . . . . . .	DWord	 00000000 _DATA	
categString  . . . . . . . . . .	Byte	 00000004 _DATA	
comma  . . . . . . . . . . . . .	Byte	 0000770B _DATA	
currentInputIndex  . . . . . . .	DWord	 000076C0 _DATA	
cyan . . . . . . . . . . . . . .	Number	 00000003h   
dot  . . . . . . . . . . . . . .	Byte	 0000770E _DATA	
exit . . . . . . . . . . . . . .	Text   	 INVOKE ExitProcess,0
extractedWordSize  . . . . . . .	DWord	 000076EC _DATA	
extractedWord  . . . . . . . . .	Byte	 000076C4 _DATA	
fileCategWritten . . . . . . . .	DWord	 00007701 _DATA	
foundWordOffset  . . . . . . . .	DWord	 00004E28 _DATA	
foundWordsSize . . . . . . . . .	DWord	 00004E24 _DATA	
foundWords . . . . . . . . . . .	Byte	 00002714 _DATA	
fwDisp . . . . . . . . . . . . .	DWord	 000076F1 _DATA	
gray . . . . . . . . . . . . . .	Number	 00000008h   
green  . . . . . . . . . . . . .	Number	 00000002h   
inputFileEnded . . . . . . . . .	DWord	 000076FD _DATA	
inputFileHandler . . . . . . . .	DWord	 000076BC _DATA	
inputFile  . . . . . . . . . . .	Byte	 00004F9C _DATA	
inputString  . . . . . . . . . .	Byte	 00004FAC _DATA	
lightBlue  . . . . . . . . . . .	Number	 00000009h   
lightCyan  . . . . . . . . . . .	Number	 0000000Bh   
lightGray  . . . . . . . . . . .	Number	 00000007h   
lightGreen . . . . . . . . . . .	Number	 0000000Ah   
lightMagenta . . . . . . . . . .	Number	 0000000Dh   
lightRed . . . . . . . . . . . .	Number	 0000000Ch   
magenta  . . . . . . . . . . . .	Number	 00000005h   
mainLoopCounter  . . . . . . . .	DWord	 000076F9 _DATA	
noWordFound  . . . . . . . . . .	DWord	 00007705 _DATA	
projectName  . . . . . . . . . .	Byte	 00007767 _DATA	
promptCount  . . . . . . . . . .	Byte	 000078D3 _DATA	
promptFile1  . . . . . . . . . .	Byte	 000077EC _DATA	
promptFile2  . . . . . . . . . .	Byte	 000077F3 _DATA	
promptNoCateg  . . . . . . . . .	Byte	 00007913 _DATA	
promptNoDot1 . . . . . . . . . .	Byte	 00007819 _DATA	
promptNoDot2 . . . . . . . . . .	Byte	 0000784D _DATA	
promptSep1 . . . . . . . . . . .	Byte	 00007883 _DATA	
promptSep2 . . . . . . . . . . .	Byte	 000078B9 _DATA	
promptSep3 . . . . . . . . . . .	Byte	 000078C6 _DATA	
promptWrong  . . . . . . . . . .	Byte	 00007840 _DATA	
red  . . . . . . . . . . . . . .	Number	 00000004h   
semiColon  . . . . . . . . . . .	Byte	 00007709 _DATA	
sepChar  . . . . . . . . . . . .	Byte	 000076F0 _DATA	
smallSpace . . . . . . . . . . .	Byte	 000077E9 _DATA	
stars1 . . . . . . . . . . . . .	Byte	 00007717 _DATA	
stars2 . . . . . . . . . . . . .	Byte	 00007799 _DATA	
white  . . . . . . . . . . . . .	Number	 0000000Fh   
wordTheCount . . . . . . . . . .	DWord	 000076F5 _DATA	
wsprintf . . . . . . . . . . . .	Text   	 wsprintfA
yellow . . . . . . . . . . . . .	Number	 0000000Eh   

	   0 Warnings
	   0 Errors
